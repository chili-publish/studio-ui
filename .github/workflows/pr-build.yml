name: Build and deploy PR
on: [pull_request]
env:
    NODE_VERSION: 20
jobs:
    run-tests:
        runs-on: ubuntu-latest
        timeout-minutes: 30
        strategy:
            matrix:
                shard: [1, 2, 3, 4, 5]
        steps:
            - uses: FranzDiebold/github-env-vars-action@v2
            - uses: actions/checkout@v3
            - name: Use Node ${{ env.NODE_VERSION }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  registry-url: 'https://npm.pkg.github.com'
                  scope: '@chili-publish'
            - name: install dependencies
              run: |
                  yarn install
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.PACKAGE_SECRET }}
            - name: run tests
              run: yarn test --shard=${{ matrix.shard }}/${{ strategy.job-total }} --coverage
            - name: Rename coverage to shard coverage
              run: |
                  mv coverage/junit.xml coverage/junit-${{matrix.shard}}.xml
                  mv coverage/lcov.info coverage/lcov-${{matrix.shard}}.info
                  mv coverage/coverage-final.json coverage/coverage-final-${{matrix.shard}}.json
            - name: Use UploadArtifact
              uses: actions/upload-artifact@v4
              with:
                  name: coverage-artifacts-${{ matrix.shard }}
                  path: |
                      coverage/**/*.xml
                      coverage/**/*.json
                      coverage/**/*.info
    report-coverage:
        runs-on: ubuntu-latest
        needs: [run-tests]
        steps:
            - uses: FranzDiebold/github-env-vars-action@v2
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0
            - uses: actions/upload-artifact/merge@v4
              with:
                  name: coverage-artifacts
                  path: coverage
            - uses: actions/download-artifact@v4
              with:
                  name: coverage-artifacts
                  path: coverage
            - name: Process Coverage
              run: npx nyc report --reporter lcov --reporter json --reporter html -t coverage
            - name: Publish Unit Test Results
              uses: EnricoMi/publish-unit-test-result-action@v2
              if: always()
              with:
                  files: coverage/**/*.xml
            - name: SonarQube analysis
              uses: docker://sonarsource/sonar-scanner-cli:latest
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
                  SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
            - name: copy coverage reports
              run: |
                  coveragePath=upload/coverage_reports/$CI_REF_NAME
                  mkdir -p ${coveragePath%"/merge"}
                  cp -R coverage/* ${coveragePath%"/merge"}
            - name: Copy to Azure Blob Storage
              uses: azure/CLI@v1
              with:
                  inlineScript: |
                      az storage blob upload-batch -d studio-ui -s upload/ --connection-string "${{ secrets.AZURE_CDN_STUDIO_DEV_CONNECTION_STRING }}" --overwrite true
    build:
        runs-on: ubuntu-latest
        name: build (20)
        steps:
            - uses: FranzDiebold/github-env-vars-action@v2
            - uses: actions/checkout@v3
            - name: Use Node ${{ env.NODE_VERSION }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  registry-url: 'https://npm.pkg.github.com'
                  scope: '@chili-publish'
            - name: install dependencies
              run: |
                  yarn install
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.PACKAGE_SECRET }}
            - name: run license check
              run: yarn validate-licenses
            - name: run linting
              run: yarn ci-lint
            - name: build code
              run: yarn build
            - name: 'Comment on PR'
              uses: actions/github-script@0.3.0
              if: github.event_name == 'pull_request'
              with:
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  script: |
                      const formatBytes=(a, b = 2, k = 1024)=>{
                          with (Math) {
                              let d = floor(log(a) / log(k));
                              return 0 == a
                                  ? '0 Bytes'
                                  : parseFloat((a / pow(k, d)).toFixed(max(0, b))) +
                                        ' ' +
                                        ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'][d];
                          }
                      }
                      const fs = require("fs");
                      const stats = fs.statSync("./dist/bundle.js")
                      const fileSizeInBytes = stats.size;
                      const limit=1000000;
                      const getSizeDif = () => {
                          let sizeDif = 0;
                          if (limit > fileSizeInBytes) {
                              sizeDif = limit - fileSizeInBytes;
                              return `${formatBytes(sizeDif, 3)} less than limit`;
                          }
                          sizeDif = fileSizeInBytes - limit;
                          return `${formatBytes(sizeDif, 3)} more than limit`;
                      };

                      const formattedSize = formatBytes(stats.size,3);
                      const { issue: { number: issue_number }, repo: { owner, repo }  } = context;

                      github.issues.createComment({ issue_number, owner, repo, body: 'PR bundle size is ' + formattedSize+ ' and ' +getSizeDif()+'.'  });
            - name: copy file branch
              run: |
                  buildPath=upload/pr_builds/$CI_REF_NAME
                  mkdir -p ${buildPath%"/merge"}
                  cp -R dist/* ${buildPath%"/merge"}
            - name: Copy to Azure Blob Storage
              uses: azure/CLI@v1
              with:
                  inlineScript: |
                      az storage blob upload-batch -d studio-ui -s upload/ --connection-string "${{ secrets.AZURE_CDN_STUDIO_DEV_CONNECTION_STRING }}" --overwrite true
